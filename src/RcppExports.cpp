// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// group_by_frequency
Rcpp::List group_by_frequency(Rcpp::List vardates, int freq);
RcppExport SEXP _idates_group_by_frequency(SEXP vardatesSEXP, SEXP freqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type vardates(vardatesSEXP);
    Rcpp::traits::input_parameter< int >::type freq(freqSEXP);
    rcpp_result_gen = Rcpp::wrap(group_by_frequency(vardates, freq));
    return rcpp_result_gen;
END_RCPP
}
// day_of_week
int day_of_week(int year, int month, int day);
RcppExport SEXP _idates_day_of_week(SEXP yearSEXP, SEXP monthSEXP, SEXP daySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type year(yearSEXP);
    Rcpp::traits::input_parameter< int >::type month(monthSEXP);
    Rcpp::traits::input_parameter< int >::type day(daySEXP);
    rcpp_result_gen = Rcpp::wrap(day_of_week(year, month, day));
    return rcpp_result_gen;
END_RCPP
}
// day_of_year
int day_of_year(int year, int month, int day);
RcppExport SEXP _idates_day_of_year(SEXP yearSEXP, SEXP monthSEXP, SEXP daySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type year(yearSEXP);
    Rcpp::traits::input_parameter< int >::type month(monthSEXP);
    Rcpp::traits::input_parameter< int >::type day(daySEXP);
    rcpp_result_gen = Rcpp::wrap(day_of_year(year, month, day));
    return rcpp_result_gen;
END_RCPP
}
// iso_week_and_year
IntegerVector iso_week_and_year(int year, int month, int day);
RcppExport SEXP _idates_iso_week_and_year(SEXP yearSEXP, SEXP monthSEXP, SEXP daySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type year(yearSEXP);
    Rcpp::traits::input_parameter< int >::type month(monthSEXP);
    Rcpp::traits::input_parameter< int >::type day(daySEXP);
    rcpp_result_gen = Rcpp::wrap(iso_week_and_year(year, month, day));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_idates_group_by_frequency", (DL_FUNC) &_idates_group_by_frequency, 2},
    {"_idates_day_of_week", (DL_FUNC) &_idates_day_of_week, 3},
    {"_idates_day_of_year", (DL_FUNC) &_idates_day_of_year, 3},
    {"_idates_iso_week_and_year", (DL_FUNC) &_idates_iso_week_and_year, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_idates(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
